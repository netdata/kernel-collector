---
name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        kernel_version:
          - '5.4.20'
          - '4.20.17'
          - '4.19.105'
          - '4.19.104'
          - '4.19.98'
          - '4.19.6'
          - '4.18.20'
          - '4.18.16'
          - '4.16.18'          
          - '4.16.3'
          - '4.15'
          - '4.14.171'
        libc:
          - glibc
          - musl
        exclude:
          # excludes musl on 4.15
          - kernel_version: 4.15
            libc: musl
          # excludes musl on 4.18.20
          - kernel_version: 4.18.20
            libc: musl          
          # excludes musl on 4.18.16
          - kernel_version: 4.18.16
            libc: musl          
          # excludes musl on 4.16.18
          - kernel_version: 4.16.18
            libc: musl          
          # excludes musl on 4.16.3
          - kernel_version: 4.16.3
            libc: musl
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set build TAG
        run: |
          echo "::set-env name=TAG::$(echo ${{ matrix.kernel_version }} | cut -f 1,2 -d '.' | tr '.' '_')_${{ matrix.libc }}"
      - name: Prepare Build Image
        run: |
          docker build --build-arg KERNEL_VERSION=${{ matrix.kernel_version }} -f Dockerfile.${{ matrix.libc }} -t kernel-collector:${TAG} .
      - name: Build It
        run: |
          docker run --rm -v $PWD:/kernel-collector -e DEBUG=1 kernel-collector:${TAG}
      - name: List Artifacts
        run: |
          ls -lah artifacts
          test -f artifacts/netdata_ebpf-*.tar.xz
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: artifacts-${{ matrix.kernel_version }}-${{ matrix.libc }}
          path: artifacts
